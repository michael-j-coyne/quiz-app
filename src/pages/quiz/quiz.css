/* trivia-item-container block */
.trivia-item-container {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.trivia-item-container__button {
  background: #4d5b9e;
  border: 0.8px;
  border-radius: 8px;
  width: 120px;
  padding: 10px 22px;

  color: #f5f7fb;
  text-align: center;
  font-size: 0.75rem;
  font-weight: 600;
}

.trivia-item-container__button:active {
  transform: scale(0.98);
}

.trivia-item-container__button:focus {
  outline-offset: 3px;
}

.trivia-item-container__button-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

/* trivia-item block */
.trivia-item {
  --option-selected-color: 214, 219, 245;
  min-width: 340px;
  border: none;
  display: flex;
  flex-direction: column;
}

@media only screen and (min-width: 768px) {
  .trivia-item {
    min-width: 728px;
  }
}

/* trivia-item block */
.trivia-item__title {
  font-size: 1rem;
  font-weight: 700;
  text-align: left;
  margin-bottom: 12px;
}

.trivia-item__options-container {
  display: flex;
  gap: 12px;
  margin-bottom: 15px;
}

.trivia-item__error-message {
  border-radius: 4px;
  padding: 2px 4px;
  margin-bottom: 2px;

  font-size: 0.75rem;
  background: #ffcccc;
}

.trivia-item__line {
  border: 0.8px solid #dbdef0;
}

/* The radio-button block */
.radio-button {
  --option-selected-color: 214, 219, 245;
  border-radius: 8px;

  display: flex;
  justify-content: center;
  align-items: center;
}

/* We don't want to display the input itself since we are trying to make the
radio input look like a button. The input's *label* will take the place of the input. */
.radio-button input {
  width: 0;
}

.radio-button label {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;

  border-radius: 8px;
  border: 0.8px solid #4d5b9e;
  min-width: 64px;
  padding: 4px 8px;

  background: transparent;
  font-weight: 500;
  font-size: 0.75rem;

  &:hover {
    background-color: rgba(var(--option-selected-color), 0.35);
    cursor: pointer;
  }
}

/* CSS magic to style the label if input is focused */
.radio-button input[type="radio"]:focus + label {
  outline: 5px auto Highlight;
  outline: 5px auto -webkit-focus-ring-color;
}

/* CSS Magic to style the label if the input is checked */
.radio-button input[type="radio"]:checked + label {
  background: rgb(var(--option-selected-color));

  &:hover {
    background-color: rgb(var(--option-selected-color));
  }
}

.radio-button_faded {
  opacity: 0.5;
}

.radio-button_correct-ans {
  background: #94d7a2;
}

/* Because we are using the CSS magic above, we need to apply these styles
at the same specificty, unfortunately. */
.radio-button_correct-ans input[type="radio"]:checked + label {
  background: #94d7a2;
}

.radio-button_incorrect-ans input[type="radio"]:checked + label {
  background: #f8bcbc;
}

.radio-button_selected {
  outline: 5px solid Highlight;
}
